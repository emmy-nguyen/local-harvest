<style>
  .nav-item {
    position: relative;
    display: inline-block;
  }

  .cart-counter {
    position: absolute;
    bottom: 35px;
    left: 25px;
    background-color: red;
    border-radius: 80%;
    padding: 2px 6px;
    font-size: 12px;
    font-weight: bold;
    display: none; /* Initially hidden */
  }
</style>
<div class="nav-bar">
  <div class="nav-item">
    <a href="/home" class="button-link">
      <img src="/image/Home.svg" alt="Home" />
      <span>Home</span>
    </a>
  </div>
  <div class="nav-item">
    <a href="/search" class="button-link">
      <img src="/image/Search.svg" alt="Search" />
      <span>Search</span>
    </a>
  </div>
  <div class="nav-item">
    <a href="/cart" class="button-link">
      <img src="/image/Cart.svg" alt="Cart" />
      <span>Cart</span>
      <span class="cart-counter" id="cart-counter" style="color: white;"></span>
    </a>
  </div>
  <div class="nav-item">
    <a href="<%=profileLink %>" class="button-link">
      <img src="/image/Account.svg" alt="Profile" />
      <span>Profile</span>
    </a>
  </div>
</div>

<script>
  // Grab the cart counter element
  const cartCounter = document.getElementById("cart-counter");

  // Function to fetch the current cart count from the server
  function fetchCartCount() {
    console.log('Fetching cart count...');
    fetch("/cart/api/getCount", {
      headers: {
        'Cache-Control': 'no-cache' // Prevent caching
      }
    })
    .then(response => {
      // Check for successful response
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      // Log and update the cart counter display
      console.log('Cart count fetched:', data.count);
      updateCartDisplay(data.count);
    })
    .catch(error => {
      console.error("There has been a problem with your fetch operation:", error);
    });
  }

  // Function to update the cart counter display
  function updateCartDisplay(count) {
    console.log('Updating display with count:', count);
    cartCounter.textContent = count;
    cartCounter.style.display = count > 0 ? "inline" : "none";
  }

  // Polling the server every 1 seconds to check for cart updates
  setInterval(fetchCartCount, 1000);

  // Initial fetch when the document loads
  document.addEventListener("DOMContentLoaded", function() {
    fetchCartCount(); // Fetch the cart count initially
  });
</script>
