<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/cartStyle/style.css" />
    <link rel="stylesheet" href="/vendorStyle/styleguide.css" />
    <link rel="stylesheet" href="/sharedStyle/style.css" />
  </head>
  <body>
    <%- include('../../../components/header') %>
    <div class="shopping-cart-page">
      <div class="div">
        <div class="text-wrapper">My Cart</div>
        <div class="text-wrapper-2">Order Details</div>


        <% if (cartItems.length === 0) { %>
          <div><p>Your cart is empty</p></div>
        <% } else { %>
          <% cartItems.forEach((item) => { %>
            <div class="cart-product">
              <div class="cart-image">
                <% if (item.product.primaryPhoto) { %>
                  <img class="cart-image" src="<%= item.product.primaryPhoto %>" alt="<%= item.product.name %>" />
                <% } %>
              </div>
              <p class="p">
                <a class="button-color-effect" href="/products/<%= item.productId %>">
                  <%= item.product.name %>
                </a>
              </p>
              <div class="text-wrapper-3">$<%= item.product.price.toFixed(2) %></div>
              <div class="product-amount">
                  <div class="overlap-group">
                    <form action="/cart/delete/<%= item.cartId %>" method="post">
                      <button type="submit" class="TRASH button-enlarge-effect" data-cart-id="<%= item.cartId %>" style="background-image: url('/image/trash.png'); background-repeat: no-repeat; background-size: cover;">
                      </button>
                    </form>
                    <form action="/cart/increase/<%= item.cartId %>" method="post">
                      <button type="button" class="ADD button-enlarge-effect" data-cart-id="<%= item.cartId %>">+</button>
                    </form>
                    <form action="/cart/decrease/<%= item.cartId %>" method="post">
                      <button type="button" class="MINUS button-enlarge-effect" data-cart-id="<%= item.cartId %>">-</button>
                    </form>                  
                    <div class="text-wrapper-4"><%= item.quantity %></div>
                  </div>
              </div>
            </div>
          <% }); %>
        <% } %>


        <div class="payment-method">
          <div class="overlap">
            <div class="rectangle"></div>
            <div class="text-wrapper-5">Choose your Payment Method</div>
            <div class="rectangle-2"></div>
            <div class="rectangle-3"></div>
            <div class="text-wrapper-6 button-enlarge-effect"><a href="/customer/order/success">Pay In Person</a></div>
            <div class="text-wrapper-7 button-enlarge-effect">Pay Online</div>
            <img class="line" src="img/line-27.svg" />
          </div>
        </div>
        <img class="img" src="img/line-3.svg" />
        <div class="payment-method-order">
          <div class="text-wrapper-8">Order Subtotal</div>
          <% const sumTotal = cartItems.reduce((sum, item) => { %>
            <% return sum + (item.product.price * item.quantity); %>
          <% }, 0); %>
          <div class="text-wrapper-9"><%= `$${sumTotal.toFixed(2)}` %></div>
        </div>
        <div class="header-variants">
          <a href="/home">
            <img class="back-button button-full-effect" src="/image/navigate_before.svg"/></a>
        </div>
      </div>
    </div>
   
    <%- include('../../../components/footer') %>


    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const addButtons = document.querySelectorAll('.ADD');
        const minusButtons = document.querySelectorAll('.MINUS');
        const deleteButtons = document.querySelectorAll('.TRASH');
        
        // Add event listeners to all ADD buttons
        addButtons.forEach(button => {
          button.addEventListener('click', function(event) {
            event.preventDefault();
            const cartId = this.getAttribute('data-cart-id');
            updateCartItem(cartId, 'increase');
          });
        });
        
        // Add event listeners to all MINUS buttons
        minusButtons.forEach(button => {
          button.addEventListener('click', function(event) {
            event.preventDefault();
            const cartId = this.getAttribute('data-cart-id');
            updateCartItem(cartId, 'decrease');
          });
        });
      
        // Add event listeners to all TRASH buttons
        deleteButtons.forEach(button => {
          button.addEventListener('click', function(event) {
            event.preventDefault();
            const cartId = this.getAttribute('data-cart-id');
            deleteCartItem(cartId);
          });
        });
        
        function updateCartItem(cartId, action) {
          fetch(`/cart/${action}/${cartId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => response.json())
          .then(data => {
            console.log('Update Response:', data);
            if (data.success) {
              const cartProductElement = document.querySelector(`[data-cart-id="${cartId}"]`).closest('.cart-product');
              const quantityElement = cartProductElement.querySelector('.text-wrapper-4');
              if (data.newQuantity > 0) {
                quantityElement.textContent = data.newQuantity;
              } else {
                document.querySelector(`[data-cart-id="${cartId}"]`).closest('.cart-product').remove(); 
                // Remove the product from the DOM if quantity is zero
              }
              updateSubtotal(); // Call to update the subtotal
            } else {
              alert('Failed to update cart item.');
            }
          })
          .catch(error => {
            console.error(`Error updating cart item (${action}):`, error);
          });
        }
      
        function deleteCartItem(cartId) {
          fetch(`/cart/delete/${cartId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          })
          .then(response => response.json())
          .then(data => {
            console.log('Delete Response:', data);
            if (data.success) {
              document.querySelector(`[data-cart-id="${cartId}"]`).closest('.cart-product').remove();
              updateSubtotal(); // Update the subtotal when an item is removed
            } else {
              alert('Failed to delete cart item.');
            }
          })
          .catch(error => {
            console.error('Error deleting cart item:', error);
          });
        }
      
        function updateSubtotal() {
          const cartProducts = document.querySelectorAll('.cart-product');
          let subtotal = 0;
          cartProducts.forEach((product) => {
            const price = parseFloat(product.querySelector('.text-wrapper-3').textContent.replace('$', ''));
            const quantity = parseInt(product.querySelector('.text-wrapper-4').textContent);
            subtotal += price * quantity;
          });
          document.querySelector('.text-wrapper-9').textContent = `$${subtotal.toFixed(2)}`;
        }
      });
      </script>
      
    
  </body>
</html>
